/*
 * Config class which held the panel where edit the details of the user logged 
 */
package back_end;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * @author Francisco Jose Bejarano Escano
 * EC1825088
 * @date 07/04/2022
 * @location Edinburgh
 * @version 1.1
 */
public class Config extends javax.swing.JPanel {

    /**
     * Creates new form Config
     */
    public Config() {
        initComponents();
    }

    /**
     * Connects with the database to display the details of the user logged
     * retrieved from the database
     * @param adminID passed from Menu class
     */
    public void displayDetails(String adminID) {
        
        try{

            // Instance of the ConnectMySQL class
            ConnectMySQL Con = new ConnectMySQL();
            
            // Connects with the database
            Con.ConnectDatabase();

            // Send a query to the database to retrieve information
            String SQL = "SELECT * FROM administrator WHERE adminID = '" +adminID +"'";

            // Executes the given SQL statement, which returns a single ResultSet object
            Con.result = Con.statement.executeQuery(SQL);

            // If the query finds a row with the given information from the textfields
            if(Con.result.next()) {
                
                txtAdminId.setText(Con.result.getString("adminID"));
                txtAdminFirstname.setText(Con.result.getString("firstname"));
                txtAdminSurname.setText(Con.result.getString("surname"));
                txtAdminUsername.setText(Con.result.getString("username"));
                txtAdminPass.setText(Con.result.getString("password"));
            }
            else {

                JOptionPane.showMessageDialog(null, "Invalid Username or Password");
            }
            
            Con.DisconnectDatabase();
        }
        catch(SQLException ex) {
            
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        configPanel = new javax.swing.JPanel();
        lblPersDet = new javax.swing.JLabel();
        lblAdminId = new javax.swing.JLabel();
        txtAdminId = new javax.swing.JTextField();
        lbAdminFirstname = new javax.swing.JLabel();
        txtAdminFirstname = new javax.swing.JTextField();
        lblAdminSurname = new javax.swing.JLabel();
        txtAdminSurname = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        txtAdminUsername = new javax.swing.JTextField();
        lblAdminPass = new javax.swing.JLabel();
        txtAdminPass = new javax.swing.JPasswordField();
        btnAdminEdit = new javax.swing.JButton();
        btnAdminSave = new javax.swing.JButton();

        setLayout(new java.awt.CardLayout());

        configPanel.setLayout(new java.awt.GridBagLayout());

        lblPersDet.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPersDet.setText("<HTML><u>Personal Details</u><HTML>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        configPanel.add(lblPersDet, gridBagConstraints);

        lblAdminId.setText("ID: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 6, 0, 0);
        configPanel.add(lblAdminId, gridBagConstraints);

        txtAdminId.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAdminId.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 0, 0);
        configPanel.add(txtAdminId, gridBagConstraints);

        lbAdminFirstname.setText("First Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 6, 0, 0);
        configPanel.add(lbAdminFirstname, gridBagConstraints);

        txtAdminFirstname.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAdminFirstname.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 0, 0);
        configPanel.add(txtAdminFirstname, gridBagConstraints);

        lblAdminSurname.setText("Surname:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 6, 0, 0);
        configPanel.add(lblAdminSurname, gridBagConstraints);

        txtAdminSurname.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAdminSurname.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 53;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 0, 43);
        configPanel.add(txtAdminSurname, gridBagConstraints);

        lblUsername.setText("Username:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 6, 0, 0);
        configPanel.add(lblUsername, gridBagConstraints);

        txtAdminUsername.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAdminUsername.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 0, 0);
        configPanel.add(txtAdminUsername, gridBagConstraints);

        lblAdminPass.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 6, 0, 0);
        configPanel.add(lblAdminPass, gridBagConstraints);

        txtAdminPass.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAdminPass.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 53;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 0, 43);
        configPanel.add(txtAdminPass, gridBagConstraints);

        btnAdminEdit.setText("Edit");
        btnAdminEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 12, 219, 43);
        configPanel.add(btnAdminEdit, gridBagConstraints);

        btnAdminSave.setText("Save");
        btnAdminSave.setEnabled(false);
        btnAdminSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 38, 219, 0);
        configPanel.add(btnAdminSave, gridBagConstraints);

        add(configPanel, "card2");
    }// </editor-fold>//GEN-END:initComponents

//GEN-FIRST:event_btnAdminSaveActionPerformed
 
//GEN-LAST:event_btnAdminSaveActionPerformed
    /**
     * Action Event that calls the method saveAdmin,
     * enables all the JTextFields of the admin panel and
     * disenable the button edit
     * @param evt 
     */
    private void btnAdminSaveActionPerformed(java.awt.event.ActionEvent evt) {
        
        saveAdmin();
        
        txtAdminFirstname.setEnabled(false);
        txtAdminSurname.setEnabled(false);
        txtAdminUsername.setEnabled(false);
        txtAdminPass.setEnabled(false);
        btnAdminSave.setEnabled(false);

        btnAdminEdit.setEnabled(true);
    }
    /**
     * Action Event that enables all the JTextFields of the admin panel and
     * disenable the button edit
     * @param evt 
     */
    private void btnAdminEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminEditActionPerformed
        // TODO add your handling code here:
        txtAdminFirstname.setEnabled(true);
        txtAdminSurname.setEnabled(true);
        txtAdminUsername.setEnabled(true);
        txtAdminPass.setEnabled(true);
        btnAdminSave.setEnabled(true);

        btnAdminEdit.setEnabled(false);
    }//GEN-LAST:event_btnAdminEditActionPerformed

   
    /**
     * Method to update the details of the user logged
     */
    public void saveAdmin() {
        
         try {

            // Instance of the ConnectMySQL class
            ConnectMySQL Con = new ConnectMySQL();
            // Get the text from a textfield of the UI
            String id = txtAdminId.getText();
            String fn = txtAdminFirstname.getText();
            String sn = txtAdminSurname.getText();
            String un = txtAdminUsername.getText();
            String pw = txtAdminPass.getText();
            
            Object [] options = {"Yes",
                                 "No"};
                    
                    int choosen = JOptionPane.showOptionDialog(null,//parent container of JOptionPane
                        "Save changes?",
                        "Change Details",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,//do not use a custom Icon
                        options,//the titles of buttons
                        options[1]);//default button title
             
            // Check if both passwords are equals
            if(choosen == 0) {                           

                // Connects with the database
                Con.ConnectDatabase();

                // Send a query to the database to retrieve information
                String SQL = "SELECT * FROM administrator WHERE adminID = '" +id +"'";

                // Executes the given SQL statement, which returns a single ResultSet object
                Con.result = Con.statement.executeQuery(SQL);

                // If the query finds a row with the given information from the textfields
                if(Con.result.next()) {
                    
                    // Updates the password of the user
                    SQL = "UPDATE `administrator` SET `firstname` = ?, "
                            + "`surname` = ?, `username` = ?, `password` = ? "
                            + "WHERE `adminID` = ?";
                    
                    try(Connection conn = Con.connection; 
                        PreparedStatement preparedStmt = conn.prepareStatement(SQL)) {
                        
                            preparedStmt.setString(1, fn);
                            preparedStmt.setString(2, sn);
                            preparedStmt.setString(3, un);
                            preparedStmt.setString(4, pw);
                            preparedStmt.setString(5, id);

                            preparedStmt.executeUpdate();
                    }
                    catch(SQLException ex) {
                        
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }

                    JOptionPane.showMessageDialog(null, "Details changed successfully!");                    
                    
                }
                
            }

        }   
        catch (SQLException ex) {
            Logger.getLogger(ForgotPassword.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdminEdit;
    private javax.swing.JButton btnAdminSave;
    private javax.swing.JPanel configPanel;
    private javax.swing.JLabel lbAdminFirstname;
    private javax.swing.JLabel lblAdminId;
    private javax.swing.JLabel lblAdminPass;
    private javax.swing.JLabel lblAdminSurname;
    private javax.swing.JLabel lblPersDet;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtAdminFirstname;
    private javax.swing.JTextField txtAdminId;
    private javax.swing.JPasswordField txtAdminPass;
    private javax.swing.JTextField txtAdminSurname;
    private javax.swing.JTextField txtAdminUsername;
    // End of variables declaration//GEN-END:variables

    // Getter
    public JPanel getConfigPanel() {
        return configPanel;
    }

}
